

// Swift
//
// AppDelegate.swift
import UIKit
import FBSDKCoreKit

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {
    
    func application(
        _ application: UIApplication,
        didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
    ) -> Bool {
          
        ApplicationDelegate.shared.application(
            application,
            didFinishLaunchingWithOptions: launchOptions
        )

        return true
    }
          
    func application(
        _ app: UIApplication,
        open url: URL,
        options: [UIApplication.OpenURLOptionsKey : Any] = [:]
    ) -> Bool {

        ApplicationDelegate.shared.application(
            app,
            open: url,
            sourceApplication: options[UIApplication.OpenURLOptionsKey.sourceApplication] as? String,
            annotation: options[UIApplication.OpenURLOptionsKey.annotation]
        )

    }

}
    





//
//  SceneDelegate.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class SceneDelegate: UIResponder, UIWindowSceneDelegate {

    var window: UIWindow?


    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {
        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.
        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.
        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).
        guard let _ = (scene as? UIWindowScene) else { return }
    }

    func sceneDidDisconnect(_ scene: UIScene) {
        // Called as the scene is being released by the system.
        // This occurs shortly after the scene enters the background, or when its session is discarded.
        // Release any resources associated with this scene that can be re-created the next time the scene connects.
        // The scene may re-connect later, as its session was not necessarily discarded (see `application:didDiscardSceneSessions` instead).
    }

    func sceneDidBecomeActive(_ scene: UIScene) {
        // Called when the scene has moved from an inactive state to an active state.
        // Use this method to restart any tasks that were paused (or not yet started) when the scene was inactive.
    }

    func sceneWillResignActive(_ scene: UIScene) {
        // Called when the scene will move from an active state to an inactive state.
        // This may occur due to temporary interruptions (ex. an incoming phone call).
    }

    func sceneWillEnterForeground(_ scene: UIScene) {
        // Called as the scene transitions from the background to the foreground.
        // Use this method to undo the changes made on entering the background.
    }

    func sceneDidEnterBackground(_ scene: UIScene) {
        // Called as the scene transitions from the foreground to the background.
        // Use this method to save data, release shared resources, and store enough scene-specific state information
        // to restore the scene back to its current state.
    }


}





// Swift
//
// Add this to the header of your file, e.g. in ViewController.swift

import FBSDKLoginKit
import UIKit

// Add this to the body
class ViewController: UIViewController, LoginButtonDelegate {
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    @IBAction func Facebook_Tapped(_ sender: Any){
    
    
        if let token = AccessToken.current, !token.isExpired {
            let token = token.tokenString
            let request = FBSDKLoginKit.GraphRequest(graphPath: "me",
                                                     parameters: ["fields" : "email, name"],
                                                     tokenString: token,
                                                     version: nil,
                                                     httpMethod: .get)
            request.start(completionHandler: {connection, result, error in
                print("\(result)")
            })
        }
        else{
            let loginButton = FBLoginButton()
            loginButton.center = view.center
            loginButton.delegate = self
            loginButton.permissions = ["public_profile", "email"]
            view.addSubview(loginButton)
        }
        
        
    }
    
    func loginButton(_ loginButton: FBLoginButton, didCompleteWith result: LoginManagerLoginResult?, error: Error?) {
        
        let token = result?.token?.tokenString
        let request = FBSDKLoginKit.GraphRequest(graphPath: "me",
                                                 parameters: ["fields" : "email, name"],
                                                 tokenString: token,
                                                 version: nil,
                                                 httpMethod: .get)
        request.start(completionHandler: {connection, result, error in
            print("\(result)")
        })
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
        
    }
    
    func loginButtonDidLogOut(_ loginButton: FBLoginButton) {
        
    }
    
}






//
//  HomeViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class HomeViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    
    
    @IBAction func Fitness_Tapped(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "FitnessVC") as! FitnessViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
    
    @IBAction func Mental_Tapped(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "MentalVC") as! MentalViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
    
    @IBAction func Discipline_Tapped(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "DisciplineVC") as! DisciplineViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
    @IBAction func Recreation(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "RecreationVC") as! RecreationViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
    
    @IBAction func My_Plan(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "PlanVC") as! PlanViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
}





//
//  FitnessViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class FitnessViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    

    @IBAction func Back_Fitness(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }

}





//
//  MentalViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class MentalViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

       
    }
    
    
    @IBAction func Back_Mental(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    

}







//
//  DisciplineViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class DisciplineViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
    }
    

    @IBAction func Back_Discipline(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    

}




//
//  RecreationViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class RecreationViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    
    
    @IBAction func Back_Recreation(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
}





//
//  PlanViewController.swift
//  TwentyOne
//
//  Created by 张妮 on 18/4/21.
//

import UIKit

class PlanViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    
    
    @IBOutlet weak var First_Image: UIImageView!
    
    @IBOutlet weak var Second_Image: UIImageView!
    
    @IBOutlet weak var Third_Image: UIImageView!
    
    var i = 1
    @IBAction func First_Plan(_ sender: Any) {
        if i >= 0 && i <= 7 {
            First_Image.image = UIImage(named:"Progress\(i)")
        }
        else if i > 7 {
            First_Image.image = UIImage(named:"Progress7")
        }
        i += 1
    }
    
    var j = 1
    @IBAction func Second_Plan(_ sender: Any) {
        if j >= 0 && j <= 7 {
            Second_Image.image = UIImage(named:"Progress\(j)")
        }
        else if j > 7 {
            Second_Image.image = UIImage(named:"Progress7")
        }
        j += 1
    }
    
    var k = 1
    @IBAction func Third_Plan(_ sender: Any) {
        if k >= 0 && k <= 7 {
            Third_Image.image = UIImage(named:"Progress\(k)")
        }
        else if k > 7 {
            Third_Image.image = UIImage(named:"Progress7")
        }
        k += 1
    }
    
    
    @IBAction func My_Home(_ sender: Any) {
        let vc = storyboard?.instantiateViewController(identifier: "HomeVC") as! HomeViewController
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated:true)
    }
    
    
}


